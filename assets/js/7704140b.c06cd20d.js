(self.webpackChunk=self.webpackChunk||[]).push([[6605],{3905:(e,n,t)=>{"use strict";t.d(n,{Zo:()=>p,kt:()=>m});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=i.createContext({}),c=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return i.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(t),m=r,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return t?i.createElement(f,o(o({ref:n},p),{},{components:t})):i.createElement(f,o({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<a;c++)o[c]=t[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8331:(e,n,t)=>{"use strict";t.r(n),t.d(n,{frontMatter:()=>l,metadata:()=>s,toc:()=>c,default:()=>u});var i=t(2122),r=t(9756),a=(t(7294),t(3905)),o=["components"],l={id:"scene-file-quickstart",title:"Scene File Quick Start"},s={unversionedId:"engineering/app/scene/scene-file-quickstart",id:"engineering/app/scene/scene-file-quickstart",isDocsHomePage:!1,title:"Scene File (.scn) Quick Start Guide",description:"Default Scenes",source:"@site/../docs/engineering/app/scene/scene-file-quickstart.md",sourceDirName:"engineering/app/scene",slug:"/engineering/app/scene/scene-file-quickstart",permalink:"/docs/engineering/app/scene/scene-file-quickstart",version:"current",frontMatter:{id:"scene-file-quickstart",title:"Scene File Quick Start"},sidebar:"docs",previous:{title:"Drag & Drop Module",permalink:"/docs/engineering/app/react/components/drag-n-drop"},next:{title:"Lighting & Shadows",permalink:"/docs/engineering/app/scene/lighting-shadows"}},c=[{value:"Default Scenes",id:"default-scenes",children:[]},{value:"File Structure",id:"file-structure",children:[]}],p={toc:c};function u(e){var n=e.components,t=(0,r.Z)(e,o);return(0,a.kt)("wrapper",(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"default-scenes"},"Default Scenes"),(0,a.kt)("p",null,"Default scenes offered by Webaverse are defined in a scenes.json file, which is located in the ",(0,a.kt)("inlineCode",{parentName:"p"},"scenes")," directory in the root of the App. The first one in the list is the default scene."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'[\n    "street.scn",\n    "treehouse.scn",\n    "darkness.scn",\n    "shadows.scn",\n    "classroom.scn",\n    "grid.scn",\n    "canyon.scn"\n]\n')),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"file-structure"},"File Structure"),(0,a.kt)("p",null,"A ",(0,a.kt)("inlineCode",{parentName:"p"},".scn")," file contains the scene definition. Every scene is made up of apps. Apps can be a 3D model or some other object. Objects' definitions contain some of these listed types:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"type")," \u2013 possible types are: ",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"application/light")," \u2013 for object light "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"application/rendersettings")," \u2013 used for definition of post-processing effects "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"application/group")," \u2013 used for grouping objects. If we don't define type, default is 3D object  "))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"content")," \u2013 custom object definition for different type of object"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"start_url")," \u2013 loading point for a complex object defined with ",(0,a.kt)("inlineCode",{parentName:"li"},"index.js"),", or local/remote path for ",(0,a.kt)("inlineCode",{parentName:"li"},".glb")," / ",(0,a.kt)("inlineCode",{parentName:"li"},".vrm")," / ",(0,a.kt)("inlineCode",{parentName:"li"},".vox")," file"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"position")," \u2013 x,y,z position in scene"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"quaternion")," \u2013 x,y,z,w quaternion rotation in scene"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"scale")," \u2013 x,y,z object scale"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"dynamic")," \u2013 (true/false) loading is dynamic or not"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"physics")," \u2013 (true/false) should object have physics enabled")),(0,a.kt)("p",null,"This is an example with a simple scene. It has only two lights and two 3D objects."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'{\n    "objects": [\n        {\n            "type": "application/light",\n            "content": {\n                "lightType": "ambient",\n                "args": [[255,255,255], 2]\n            }\n        },\n        {\n            "type": "application/light",\n            "content": {\n                "lightType": "directional",\n                "args": [[255,255,255], 2],\n                "position": [1,2,3]\n            }\n        },\n        {\n            "position": [0,0,0],\n            "start_url": "https://webaverse.github.io/classroom/"\n        },\n        {\n            "position": [1,2, -4.5],\n            "quaternion": [0,0,0,1],\n            "scale": [3,3,3],\n            "start_url": "https://https-vrchat-com.proxy.webaverse.com/"\n        }\n    ]\n}\n')),(0,a.kt)("p",null,"From this example we can see that we can set light type inside a content section."),(0,a.kt)("p",null,"Other parameters for lights are [","[R, G, B]",", Intensity] where RGB represents RGB color components.\n",(0,a.kt)("inlineCode",{parentName:"p"},"start_url")," is a remote location in this case. That location should provide a .metaversefile as a starting point for object loading. Local location would look like this ",(0,a.kt)("inlineCode",{parentName:"p"},'"start_url": "/classroom/"')),(0,a.kt)("p",null,"Next we have an example of post-processing settings for a scene."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'{\n    "objects": [\n        {\n            "type": "application/rendersettings",\n            "content": {\n                "background": {\n                    "color": [0,0,0]\n                },\n                "fog": {\n                    "fogType": "exp",\n                    "args": [[2.52, 1.74, 3.88], 0.1]\n                },\n                "ssao": {\n                    "kernelRadius": 16,\n                    "minDistance": 0.005,\n                    "maxDistance": 0.1\n                },\n                "dof": {\n                    "focus": 3.0,\n                    "aperture": 0.00002,\n                    "maxblur": 0.005\n                },\n                "hdr": {\n                    "adaptive": true,\n                    "resolution": 256,\n                    "adaptionRate": 100,\n                    "maxLuminance": 10,\n                    "minLuminance": 0,\n                    "middleGrey": 3\n                },\n                "bloom": {\n                    "strength": 0.2,\n                    "radius": 0.5,\n                    "threshold": 0.8\n                }\n            }\n        }\n    ]\n}\n')),(0,a.kt)("p",null,"With those setting we can define:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"background")," \u2013 background color"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"fog")," \u2013 scene fog"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ssao")," - Screen space ambient occlusion"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"dof")," - Depth of field"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"hdr")," \u2013 High Dynamic Range imaging"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"bloom")," \u2013 Bloom effect")),(0,a.kt)("p",null,"For further reading please take a look at existing scenes here:\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/webaverse/app/tree/master/scenes"},"https://github.com/webaverse/app/tree/master/scenes")),(0,a.kt)("hr",null))}u.isMDXComponent=!0}}]);