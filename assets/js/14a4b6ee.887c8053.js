"use strict";(self.webpackChunkWebaverse=self.webpackChunkWebaverse||[]).push([[3259],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>p});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),m=s(n),p=a,g=m["".concat(l,".").concat(p)]||m[p]||d[p]||o;return n?r.createElement(g,i(i({ref:t},u),{},{components:n})):r.createElement(g,i({ref:t},u))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3833:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>p,frontMatter:()=>c,metadata:()=>s,toc:()=>d});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],c={id:"smart-contracts-integration",title:"Smart Contracts Integration Module"},l="Smart Contracts Integration Module",s={unversionedId:"engineering/blockchain/smart-contracts-integration",id:"engineering/blockchain/smart-contracts-integration",title:"Smart Contracts Integration Module",description:"This module implements the core methods to interact with Webaverse smart contracts. The core features are mint, drop and redeem.",source:"@site/docs/engineering/blockchain/smart-contracts-integration.md",sourceDirName:"engineering/blockchain",slug:"/engineering/blockchain/smart-contracts-integration",permalink:"/doc/engineering/blockchain/smart-contracts-integration",draft:!1,tags:[],version:"current",frontMatter:{id:"smart-contracts-integration",title:"Smart Contracts Integration Module"},sidebar:"tutorialSidebar",previous:{title:"Sidechain MetaMask Setup",permalink:"/doc/engineering/blockchain/sidechain-metamask"},next:{title:"Ethereum Bot Quick Start",permalink:"/doc/engineering/bot/ethereum-bot-quickstart"}},u={},d=[{value:"Usage",id:"usage",level:2},{value:"<code>mint</code>",id:"mint",level:3},{value:"Inputs",id:"inputs",level:4},{value:"<code>drop</code>",id:"drop",level:3},{value:"Inputs",id:"inputs-1",level:4},{value:"Return",id:"return",level:4},{value:"<code>redeem</code>",id:"redeem",level:3},{value:"Inputs",id:"inputs-2",level:4},{value:"Architecture",id:"architecture",level:2},{value:"Location",id:"location",level:3},{value:"<code>Exports</code>",id:"exports",level:3},{value:"<code>mint</code>",id:"mint-1",level:4},{value:"<code>drop</code>",id:"drop-1",level:4},{value:"<code>redeem</code>",id:"redeem-1",level:4}],m={toc:d};function p(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"smart-contracts-integration-module"},"Smart Contracts Integration Module"),(0,o.kt)("p",null,"This module implements the core methods to interact with Webaverse smart contracts. The core features are ",(0,o.kt)("inlineCode",{parentName:"p"},"mint"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"drop")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"redeem"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const {mint, drop, redeem} = require('./integration/web3');\n")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("h3",{id:"mint"},(0,o.kt)("inlineCode",{parentName:"h3"},"mint")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"mint(tokenURI)\n")),(0,o.kt)("p",null,"Mints an NFT on the Blockchain using the Webaverse ERC721 smart contract with the given IPFS unique identifier"),(0,o.kt)("h4",{id:"inputs"},"Inputs"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"tokenURI: {string}  ",(0,o.kt)("strong",{parentName:"li"},"[Required]"),"\nThe IPFS contend ID (cid) of the object. ")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"drop"},(0,o.kt)("inlineCode",{parentName:"h3"},"drop")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const voucher = drop(tokenId)\n")),(0,o.kt)("p",null,"Creates a signed voucher of the given token ID and stores it in the local storage."),(0,o.kt)("h4",{id:"inputs-1"},"Inputs"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"tokenId: {int|string} ",(0,o.kt)("strong",{parentName:"li"},"[Required]"),"\nThe smart contract generated token ID of the object that is to be dropped in the world")),(0,o.kt)("h4",{id:"return"},"Return"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"voucher: {string}\nA Stringified object signed by the user metamask wallet that contains tokenId, nonce, expiry, and user's wallet signature.")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"redeem"},(0,o.kt)("inlineCode",{parentName:"h3"},"redeem")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"redeem(voucher)\n")),(0,o.kt)("p",null,"Parses the given stringified voucher object and calls the WebaverseERC721 smart contract to verify the voucher. Upon succesful verification, the smart contract transfers the NFT object to the redeemer."),(0,o.kt)("h4",{id:"inputs-2"},"Inputs"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"voucher: {string} ",(0,o.kt)("strong",{parentName:"li"},"[Required]"),"\nA Stringified object that contains tokenId, nonce, expiry, and NFT object's owner's signature.")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"architecture"},"Architecture"),(0,o.kt)("h3",{id:"location"},"Location"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Webaverse App\n\u2514\u2500\u2500\u2500integration\n   \u2514\u2500\u2500\u2500web3\n         \u2514\u2500\u2500\u2500 index.js\n")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"exports"},(0,o.kt)("inlineCode",{parentName:"h3"},"Exports")),(0,o.kt)("h4",{id:"mint-1"},(0,o.kt)("inlineCode",{parentName:"h4"},"mint")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'async  function  mint(tokenURI) {\n  const  tokenID = ethers.BigNumber.from(ethers.utils.randomBytes(4)).toNumber();\n\ntry {\n  await  contract.mint(await  signer.getAddress(), tokenID, tokenURI);\n  localStorage.setItem("mintedIDs", JSON.stringify([...JSON.parse(localStorage.getItem("mintedIDs")), tokenID]));\n} catch (err) {\n    console.log(err.error);\n  }\n}\n\n')),(0,o.kt)("hr",null),(0,o.kt)("h4",{id:"drop-1"},(0,o.kt)("inlineCode",{parentName:"h4"},"drop")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'async  function  drop(localStorageSlotIndex) {\n  const  claimableVoucher = new  ClaimableVoucher({contract:  contract, signer:  signer });\n  const  tokenID = localStorageSlotIndex;\n  const  timestamp = Math.round(new  Date().getTime() / 1000) + 1000;\n  const  nonce = await  ethers.BigNumber.from(ethers.utils.randomBytes(4)).toNumber();\n  const  balance = 0;\n\ntry {\n  voucher = await  claimableVoucher.createVoucher(tokenID, balance, nonce, timestamp);\n  } catch (err) {\n    console.log(err);\n  }  \n\n  localStorage.setItem("latestvoucher", JSON.stringify(voucher));\n  let  mintedIDs = JSON.parse(localStorage.getItem("mintedIDs"));\n  mintedIDs.splice(mintedIDs.indexOf(tokenID), 1);\n  await  localStorage.setItem("mintedIDs", JSON.stringify(mintedIDs));\n  return  Promise.resolve(JSON.stringify(voucher));\n}\n\n')),(0,o.kt)("hr",null),(0,o.kt)("h4",{id:"redeem-1"},(0,o.kt)("inlineCode",{parentName:"h4"},"redeem")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'async  function  redeem(voucher) {\n\ntry {\n  await  contract.claim(await  signer.getAddress(), voucher);\n  contract.on("Transfer", (from, to, tokenId) => {\n    if (from != ethers.constants.AddressZero)\n      console.log("From : ", from, "To :", to, "Token ID :", tokenId.toNumber());\n});\n    } catch (err) {\n      console.log(err);\n      }\n}\n')))}p.isMDXComponent=!0}}]);